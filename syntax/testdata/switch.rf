val TestMatch = switch ["a"] {
	case [a, b]: false
	case [a]: true
	case _: false
}

val TestBind = switch [("a", "b"), ("c", "d"), ("e", "f")] {
	case [(a, _), (_, d), (e, f)]: a + d + e + f == "adef"
	case _: false
}

val TestDeferred = switch delay([delay(["a"]), [delay("b")]]) {
	case [[a], [b]]: a == "a" && b == "b"
	case _: false
}

val TestSumType = {
	val x #Yes | #No | #NoWithReason(string) = #NoWithReason("just because")
	switch x {
	case #Yes: false
	case #No: false
	case #NoWithReason(reason): reason == "just because"
	}
}
